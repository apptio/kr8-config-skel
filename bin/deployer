#!/bin/bash

if [ ! -z "$KR8_TRACE" ]
then
  set -x
fi

action="$1"
cluster="$2"
component="$3"

compdir="generated/${cluster}/${component}"

if [ -z "$component" ]
then
  echo "Usage: $0 {dry-run|update|diff|delete|validate} cluster component"
  exit 1
fi

if [ ! -d "$compdir/manifest" ]
then
  echo "Cluster/component directory $compdir does not exist"
  exit 1
fi

if [ -f $compdir/metadata/gc_tag ]
then
  gc_tag="--gc-tag $(cat $compdir/metadata/gc_tag)"
else
  gc_tag=
fi

# skip gc, unless a component opts-in
gc_opt="--skip-gc"
if [ -f "$compdir/metadata/gc_enable" ]
then
  gc_opt=
fi


if [ -f $compdir/metadata/kubecfg_update_args ]
then
  kubecfg_update_args=$(cat $compdir/metadata/kubecfg_update_args)
else
  kubecfg_update_args=
fi

namespace="$(cat $compdir/metadata/namespace_default)"


cfgcluster=$(echo $cluster | sed 's/-k//')

case "$action" in
  dry-run)
    kubecfg --context "${USER}@${cfgcluster}" update $kubecfg_update_args --dry-run $gc_opt $gc_tag --namespace $namespace $compdir/manifest/*.yaml
    ;;
  update)
    kubecfg --context "${USER}@${cfgcluster}" update $kubecfg_update_args $gc_opt $gc_tag --namespace $namespace $compdir/manifest/*.yaml
    ;;
  delete)
    kubecfg --context "${USER}@${cfgcluster}" delete --namespace $namespace $compdir/manifest/*.yaml
    ;;
  diff)
    kubecfg --context "${USER}@${cfgcluster}" diff --diff-strategy=subset --namespace $namespace $compdir/manifest/*.yaml
    ;;
  validate)
    kubecfg --context "${USER}@${cfgcluster}" validate $kubecfg_update_args --namespace $namespace $compdir/manifest/*.yaml
    ;;
  *)
    echo "Unknown action"
    exit 1
esac
